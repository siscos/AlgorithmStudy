<DFS>

- 이분 그래프
그래프의 정점들을 겹치지 않는 두 개의 그룹으로 나눠서 서로 다른 그룹에 속한 정점들 간에만 간선이 존재하는 그래프

- 위상정렬
각 작업을 정점으로 표현하고, 작업 간의 의존 관계를 간선으로 표현한 방향 그래프를 의존성 그래프(dependency graph)라고 한다. 
의존성 그래프는 사이클이 없기 때문에 사이클 없는 방향 그래프, 즉 DAG가 된다.

- 오일러 서킷
그래프의 모든 간선을 정확히 한 번씩 지나서 시작점으로 돌아오는 경로

- 오일러 트레일
오일러 서킷처럼 모든 간선을 정확히 한 번만 지나지만, 시작점과 끝점이 다른 경로

이중 결합 컴포넌트: 무향 그래프에서 절단점을 포함하지 않는 서브 그래프. 이중 결합 컴포넌트 내에서는
임의의 한 정점을 그래프에서 지우더라도 정점 간의 연결 관계가 유지된다.

강결합 컴포넌트(strongly connected component, SCC): 방향 그래프 상에서 두 정점 u와 v에 대해 양 방향으로
가는 경로가 모두 있을 때 두 정점은 같은 SCC에 속해 있다고 한다. 한 사이클에 포함된 정점들은 항상 같은 
SCC에 속한다. 반대로 한 SCC에 속한 두 정점 사이를 잇는 양방향 경로를 합치면 두 정점을 포함하는 사이클이 된다.

루트없는 트리(unrooted tree): 사이클이 존재하지 않는 그래프는 노드 간의 상하 관계만 없을 뿐이지 트리와 같은 
형태를 가지고 있다. 이와 같은 그래프를 루트없는 트리라고 한다. 어떤 연결된 그래프가 루트없는 트리인지
확인하려면 다음 속성 중 하나라도 성립하는지 확인하면 된다.
- 정확히 간선이 V-1개
- 사이클이 존재하지 않음
- 두 정점 사이를 연결하는 단순 경로가 정확히 한개 존재
이 조건들은 모두 동치로 한 조건이라도 성립할 경우 다른 조건들이 모두 성립한다.

<최단경로 알고리즘>
- 다익스트라
- Bellman-Ford
- Floyd의 모든 쌍 최단거리 알고리즘


<최소신장 트리>
- Kruskal
- Prim

<네트워크 유량>
- 포트-폴커슨 알고리즘
